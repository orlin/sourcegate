// Generated by CoffeeScript 1.9.1
var merge, path, read;

require("source-map-support").install();

merge = require("lodash.merge");

path = require("path");

read = function(sources, opts) {
  var i, len, objects, root, source;
  if (opts.relative == null) {
    opts.relative = true;
  }
  root = opts.relative && (opts.root != null) ? path.join(process.cwd(), opts.root) : opts.root || process.cwd();
  objects = [];
  for (i = 0, len = sources.length; i < len; i++) {
    source = sources[i];
    if (typeof source === "object") {
      objects.push(source);
    } else if (typeof source === "string") {
      objects.push(require(path.join(root, path.normalize(source))));
    }
  }
  return objects;
};

module.exports = function(sources, opts) {
  var objects;
  if (sources == null) {
    sources = [];
  }
  if (opts == null) {
    opts = {};
  }
  if (!(sources.length > 0)) {
    return {};
  } else {
    objects = read(sources, opts);
    if (objects.length === 1) {
      return objects[0];
    } else {
      if (opts.merge == null) {
        opts.merge = true;
      }
      if (opts.merge) {
        objects.unshift({});
        return merge.apply(null, objects);
      } else {
        return objects;
      }
    }
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLGlCQUFBOztBQUFBLE9BQUEsQ0FBUSxvQkFBUixDQUE2QixDQUFDLE9BQTlCLENBQUEsQ0FBQSxDQUFBOztBQUFBLEtBRUEsR0FBUSxPQUFBLENBQVEsY0FBUixDQUZSLENBQUE7O0FBQUEsSUFHQSxHQUFPLE9BQUEsQ0FBUSxNQUFSLENBSFAsQ0FBQTs7QUFBQSxJQUlBLEdBQU8sU0FBQyxPQUFELEVBQVUsSUFBVixHQUFBO0FBQ0wsTUFBQSw2QkFBQTs7SUFBQSxJQUFJLENBQUMsV0FBWTtHQUFqQjtBQUFBLEVBQ0EsSUFBQSxHQUNLLElBQUksQ0FBQyxRQUFMLElBQWtCLG1CQUFyQixHQUNFLElBQUksQ0FBQyxJQUFMLENBQVUsT0FBTyxDQUFDLEdBQVIsQ0FBQSxDQUFWLEVBQXlCLElBQUksQ0FBQyxJQUE5QixDQURGLEdBR0UsSUFBSSxDQUFDLElBQUwsSUFBYSxPQUFPLENBQUMsR0FBUixDQUFBLENBTGpCLENBQUE7QUFBQSxFQU9BLE9BQUEsR0FBVSxFQVBWLENBQUE7QUFRQSxPQUFBLHlDQUFBO3dCQUFBO0FBQ0UsSUFBQSxJQUFHLE1BQUEsQ0FBQSxNQUFBLEtBQWlCLFFBQXBCO0FBQ0UsTUFBQSxPQUFPLENBQUMsSUFBUixDQUFhLE1BQWIsQ0FBQSxDQURGO0tBQUEsTUFFSyxJQUFHLE1BQUEsQ0FBQSxNQUFBLEtBQWlCLFFBQXBCO0FBQ0gsTUFBQSxPQUFPLENBQUMsSUFBUixDQUFhLE9BQUEsQ0FBUSxJQUFJLENBQUMsSUFBTCxDQUFVLElBQVYsRUFBZ0IsSUFBSSxDQUFDLFNBQUwsQ0FBZSxNQUFmLENBQWhCLENBQVIsQ0FBYixDQUFBLENBREc7S0FIUDtBQUFBLEdBUkE7U0FhQSxRQWRLO0FBQUEsQ0FKUCxDQUFBOztBQUFBLE1Bb0JNLENBQUMsT0FBUCxHQUFpQixTQUFDLE9BQUQsRUFBZSxJQUFmLEdBQUE7QUFDZixNQUFBLE9BQUE7O0lBRGdCLFVBQVU7R0FDMUI7O0lBRDhCLE9BQU87R0FDckM7QUFBQSxFQUFBLElBQUEsQ0FBQSxDQUFPLE9BQU8sQ0FBQyxNQUFSLEdBQWlCLENBQXhCLENBQUE7V0FDRSxHQURGO0dBQUEsTUFBQTtBQUdFLElBQUEsT0FBQSxHQUFVLElBQUEsQ0FBSyxPQUFMLEVBQWMsSUFBZCxDQUFWLENBQUE7QUFDQSxJQUFBLElBQUcsT0FBTyxDQUFDLE1BQVIsS0FBa0IsQ0FBckI7YUFDRSxPQUFRLENBQUEsQ0FBQSxFQURWO0tBQUEsTUFBQTs7UUFHRSxJQUFJLENBQUMsUUFBUztPQUFkO0FBQ0EsTUFBQSxJQUFHLElBQUksQ0FBQyxLQUFSO0FBRUUsUUFBQSxPQUFPLENBQUMsT0FBUixDQUFnQixFQUFoQixDQUFBLENBQUE7ZUFDQSxLQUFLLENBQUMsS0FBTixDQUFZLElBQVosRUFBa0IsT0FBbEIsRUFIRjtPQUFBLE1BQUE7ZUFLRSxRQUxGO09BSkY7S0FKRjtHQURlO0FBQUEsQ0FwQmpCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwic291cmNlLW1hcC1zdXBwb3J0XCIpLmluc3RhbGwoKVxuXG5tZXJnZSA9IHJlcXVpcmUoXCJsb2Rhc2gubWVyZ2VcIilcbnBhdGggPSByZXF1aXJlKFwicGF0aFwiKVxucmVhZCA9IChzb3VyY2VzLCBvcHRzKSAtPlxuICBvcHRzLnJlbGF0aXZlID89IHRydWVcbiAgcm9vdCA9XG4gICAgaWYgb3B0cy5yZWxhdGl2ZSBhbmQgb3B0cy5yb290P1xuICAgICAgcGF0aC5qb2luIHByb2Nlc3MuY3dkKCksIG9wdHMucm9vdFxuICAgIGVsc2VcbiAgICAgIG9wdHMucm9vdCB8fCBwcm9jZXNzLmN3ZCgpXG5cbiAgb2JqZWN0cyA9IFtdXG4gIGZvciBzb3VyY2UgaW4gc291cmNlc1xuICAgIGlmIHR5cGVvZiBzb3VyY2UgaXMgXCJvYmplY3RcIlxuICAgICAgb2JqZWN0cy5wdXNoIHNvdXJjZVxuICAgIGVsc2UgaWYgdHlwZW9mIHNvdXJjZSBpcyBcInN0cmluZ1wiXG4gICAgICBvYmplY3RzLnB1c2ggcmVxdWlyZShwYXRoLmpvaW4ocm9vdCwgcGF0aC5ub3JtYWxpemUoc291cmNlKSkpXG4gIG9iamVjdHNcblxubW9kdWxlLmV4cG9ydHMgPSAoc291cmNlcyA9IFtdLCBvcHRzID0ge30pIC0+XG4gIHVubGVzcyBzb3VyY2VzLmxlbmd0aCA+IDBcbiAgICB7fVxuICBlbHNlXG4gICAgb2JqZWN0cyA9IHJlYWQgc291cmNlcywgb3B0c1xuICAgIGlmIG9iamVjdHMubGVuZ3RoIGlzIDFcbiAgICAgIG9iamVjdHNbMF1cbiAgICBlbHNlXG4gICAgICBvcHRzLm1lcmdlID89IHRydWVcbiAgICAgIGlmIG9wdHMubWVyZ2VcbiAgICAgICAgIyBtZXJnZSBtdXRhdGVzIHRoZSBmaXJzdCBvYmplY3RcbiAgICAgICAgb2JqZWN0cy51bnNoaWZ0IHt9XG4gICAgICAgIG1lcmdlLmFwcGx5IG51bGwsIG9iamVjdHNcbiAgICAgIGVsc2VcbiAgICAgICAgb2JqZWN0c1xuIl19