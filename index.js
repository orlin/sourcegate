// Generated by CoffeeScript 1.9.1
var merge, path, read;

require("source-map-support").install();

merge = require("lodash.merge");

path = require("path");

read = function(sources) {
  var i, len, objects, source;
  objects = [];
  for (i = 0, len = sources.length; i < len; i++) {
    source = sources[i];
    if (typeof source === "object") {
      objects.push(source);
    } else if (typeof source === "string") {
      objects.push(require(path.join(process.cwd(), path.normalize(source))));
    }
  }
  return objects;
};

module.exports = function(sources) {
  var objects;
  if (sources == null) {
    sources = [];
  }
  if (!(sources.length > 0)) {
    return {};
  } else {
    objects = read(sources);
    if (sources.length === 1) {
      return sources[0];
    } else {
      return merge.apply(null, objects);
    }
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguY29mZmVlIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5kZXguY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLGlCQUFBOztBQUFBLE9BQUEsQ0FBUSxvQkFBUixDQUE2QixDQUFDLE9BQTlCLENBQUEsQ0FBQSxDQUFBOztBQUFBLEtBRUEsR0FBUSxPQUFBLENBQVEsY0FBUixDQUZSLENBQUE7O0FBQUEsSUFHQSxHQUFPLE9BQUEsQ0FBUSxNQUFSLENBSFAsQ0FBQTs7QUFBQSxJQUlBLEdBQU8sU0FBQyxPQUFELEdBQUE7QUFDTCxNQUFBLHVCQUFBO0FBQUEsRUFBQSxPQUFBLEdBQVUsRUFBVixDQUFBO0FBQ0EsT0FBQSx5Q0FBQTt3QkFBQTtBQUNFLElBQUEsSUFBRyxNQUFBLENBQUEsTUFBQSxLQUFpQixRQUFwQjtBQUNFLE1BQUEsT0FBTyxDQUFDLElBQVIsQ0FBYSxNQUFiLENBQUEsQ0FERjtLQUFBLE1BRUssSUFBRyxNQUFBLENBQUEsTUFBQSxLQUFpQixRQUFwQjtBQUNILE1BQUEsT0FBTyxDQUFDLElBQVIsQ0FBYSxPQUFBLENBQVEsSUFBSSxDQUFDLElBQUwsQ0FBVSxPQUFPLENBQUMsR0FBUixDQUFBLENBQVYsRUFBeUIsSUFBSSxDQUFDLFNBQUwsQ0FBZSxNQUFmLENBQXpCLENBQVIsQ0FBYixDQUFBLENBREc7S0FIUDtBQUFBLEdBREE7U0FNQSxRQVBLO0FBQUEsQ0FKUCxDQUFBOztBQUFBLE1BYU0sQ0FBQyxPQUFQLEdBQWlCLFNBQUMsT0FBRCxHQUFBO0FBQ2YsTUFBQSxPQUFBOztJQURnQixVQUFVO0dBQzFCO0FBQUEsRUFBQSxJQUFBLENBQUEsQ0FBTyxPQUFPLENBQUMsTUFBUixHQUFpQixDQUF4QixDQUFBO1dBQ0UsR0FERjtHQUFBLE1BQUE7QUFHRSxJQUFBLE9BQUEsR0FBVSxJQUFBLENBQUssT0FBTCxDQUFWLENBQUE7QUFDQSxJQUFBLElBQUcsT0FBTyxDQUFDLE1BQVIsS0FBa0IsQ0FBckI7YUFDRSxPQUFRLENBQUEsQ0FBQSxFQURWO0tBQUEsTUFBQTthQUdFLEtBQUssQ0FBQyxLQUFOLENBQVksSUFBWixFQUFrQixPQUFsQixFQUhGO0tBSkY7R0FEZTtBQUFBLENBYmpCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwic291cmNlLW1hcC1zdXBwb3J0XCIpLmluc3RhbGwoKVxuXG5tZXJnZSA9IHJlcXVpcmUoXCJsb2Rhc2gubWVyZ2VcIilcbnBhdGggPSByZXF1aXJlKFwicGF0aFwiKVxucmVhZCA9IChzb3VyY2VzKSAtPlxuICBvYmplY3RzID0gW11cbiAgZm9yIHNvdXJjZSBpbiBzb3VyY2VzXG4gICAgaWYgdHlwZW9mIHNvdXJjZSBpcyBcIm9iamVjdFwiXG4gICAgICBvYmplY3RzLnB1c2ggc291cmNlXG4gICAgZWxzZSBpZiB0eXBlb2Ygc291cmNlIGlzIFwic3RyaW5nXCJcbiAgICAgIG9iamVjdHMucHVzaCByZXF1aXJlKHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCBwYXRoLm5vcm1hbGl6ZShzb3VyY2UpKSlcbiAgb2JqZWN0c1xuXG5tb2R1bGUuZXhwb3J0cyA9IChzb3VyY2VzID0gW10pIC0+XG4gIHVubGVzcyBzb3VyY2VzLmxlbmd0aCA+IDBcbiAgICB7fVxuICBlbHNlXG4gICAgb2JqZWN0cyA9IHJlYWQoc291cmNlcylcbiAgICBpZiBzb3VyY2VzLmxlbmd0aCBpcyAxXG4gICAgICBzb3VyY2VzWzBdXG4gICAgZWxzZVxuICAgICAgbWVyZ2UuYXBwbHkgbnVsbCwgb2JqZWN0c1xuIl19